static int[] BubbleSort(int[] tomb) {
            for (int i = tomb.Length-1; i >= 0; i--) {
                for (int j = 0; j < i; j++) {
                    if (tomb[i] < tomb[j]){
                        int tmp = tomb[i];
                        tomb[i] = tomb[j];
                        tomb[j] = tmp;
                    }
                }
            }
            return tomb;
}
static List<adat> BubbleSort(List<adat> list){
    for (int i = list.Count - 1; i >= 0; i--){
        for (int j = 0; j < i; j++){
            if (list[i].dateYear < list[j].dateYear){
                adat tmp = list[i];
                list[i] =   list[j];
                list[j] = tmp;
            }
        }
    }
    return list;
}
static int[] ShellSort(int[] bemenet)
        {
            int[] tomb = new int[bemenet.Length];
            Array.Copy(bemenet, tomb, bemenet.Length);
            int tavolsag = tomb.Length / 2;
            while (tavolsag > 0)
            {
                //ez egy módosított beszúró rendezés
                for (int i = 0; i < tomb.Length - tavolsag; i++)
                {
                    int j = i + tavolsag;
                    int tmp = tomb[j];
                    while (j >= tavolsag && tmp < tomb[j - tavolsag])
                    {
                        tomb[j] = tomb[j - tavolsag];
                        j -= tavolsag;
                    }
                    tomb[j] = tmp;
                }
                if (tavolsag == 2) tavolsag = 1;
                else tavolsag = (int)(tavolsag / 2.2);
            }
            return tomb;
        }
